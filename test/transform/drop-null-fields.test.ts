import { App, Stack } from 'aws-cdk-lib';
import { Role, ServicePrincipal } from 'aws-cdk-lib/aws-iam';
import { Transform } from '../../src';
import { RepresentNullValue } from '../../src/lib/transform/drop-null-fields';
import { SomeNode } from '../node.test';

describe('DropNullFields', () => {
  test('Must be able to specify name', () => {
    const defaultName = Transform.dropNullFields('node1', {
      fields: [],
    });
    const specifyName = Transform.dropNullFields('node2', {
      name: 'Specify Name',
      fields: [],
    });
    expect(defaultName.name).toBe('Drop Null Fields');
    expect(specifyName.name).toBe('Specify Name');
  });

  test('If not provide granter and grant then not throw error', () => {
    const app = new App();
    const stack = new Stack(app, 'MyStack');
    const dropNullFields = Transform.dropNullFields('node1', {
      fields: [],
    });
    dropNullFields.grant(
      new Role(stack, 'Role', {
        assumedBy: new ServicePrincipal('glue.amazonaws.com'),
      })
    );
  });

  test('No inputs and build then python throw error', () => {
    const dropNullFields = Transform.dropNullFields('node1', {
      fields: [],
    });
    expect(() => dropNullFields.python()).toThrow(
      'You need to choose exactly 1 parent(s) for DropNullFields Transform. Now 0 parent(s).'
    );
  });

  test('2 inputs and build then python throw error', () => {
    const dropNullFields = Transform.dropNullFields('node1', {
      fields: [],
    });
    new SomeNode('Input1').to(dropNullFields);
    new SomeNode('Input2').to(dropNullFields);
    expect(() => dropNullFields.python()).toThrow(
      'You need to choose exactly 1 parent(s) for DropNullFields Transform. Now 2 parent(s).'
    );
  });

  test('Python should build code', () => {
    const dropNullFields = Transform.dropNullFields('node1', {
      fields: [
        RepresentNullValue.emptyString(),
        RepresentNullValue.minusOne(),
        RepresentNullValue.nullString(),
      ],
    });
    const prevNode = new SomeNode('prev_node');
    prevNode.to(dropNullFields);
    const code = dropNullFields.python();
    expect(code.imports).toStrictEqual([
      'from awsglue.gluetypes import *',
      'from awsglue import DynamicFrame',
    ]);
    expect(code.head?.length).toBe(2);
    expect(code.body).toStrictEqual([
      `# Script generated by CDK for node Drop Null Fields
DropNullFields_node1 = drop_nulls(
    glueContext,
    frame=SomeNode_prev_node,
    nullStringSet={"", "null"},
    nullIntegerSet={-1},
    transformation_ctx=\"DropNullFields_node1\",
)`,
    ]);
    expect(code.tail).toBeUndefined();
  });

  test('Scala not implement', () => {
    const dropNullFields = Transform.dropNullFields('DropNullFields', {
      fields: [RepresentNullValue.emptyString()],
    });
    const prevNode = new SomeNode('prev_node');
    prevNode.to(dropNullFields);
    expect(() => dropNullFields.scala()).toThrow();
  });
});
